executables:
{
	awsIot = ( AwsComponent )
	radio = ( Radio )
	publish = (PublishRadio)
}

requires:
{
	file:
    {

	        // needed for networking:
	        /lib/libnss_compat.so.2 /lib/
	        /lib/libnss_files.so.2 /lib/
	        /lib/libnss_dns.so.2 /lib/
	        /lib/libresolv.so.2 /lib/
	        /etc/nsswitch.conf /etc/
	        /etc/hosts /etc/
	        /etc/resolv.conf /etc/
    }

}

processes:
{
	envVars:
	{
		LE_LOG_LEVEL = 	DEBUG
	}

	run:
	{
		( awsIot )
		( radio )
		( publish )
	}
	faultAction: restart
	maxCoreDumpFileBytes: 512K
	maxFileBytes: 512K
}
bindings:
{
    publish.PublishRadio.radio -> radio.Radio.radio
    publish.PublishRadio.aws -> awsIot.AwsComponent.aws
    radio.Radio.le_mrc -> modemService.le_mrc
    radio.Radio.le_temp -> modemService.le_temp
}
extern:
{
    aws = awsIot.AwsComponent.aws
}
version: 1.0.0
maxFileSystemBytes: 512K
sandboxed: true
